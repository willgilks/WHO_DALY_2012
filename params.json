{
  "name": "WHO Disability Adjusted Life Years, by gender and cause, 2012",
  "tagline": "Data and R code for plotting data on Disability Adjusted Life Years from World Health Organisation",
  "body": "I was interested in gender differences in disease and mortality in humans, and found an extensive data set from the World Health Organisation (http://www.who.int/). Specifically this is disability-adjusted life-years in the year 2012, for the whole world, separated by age-group and by sex.\r\n\r\nThe excel file downloaded from http://www.who.int/healthinfo/global_burden_disease/estimates/en/index2.html is fairly complex, and contains features that make it a bit complicated for me to read into R. In excel, I did some reformatting and created a few more variables, prior to import into R. \r\n\r\nI'm also interested in trying to get big data into good graphs, - and doing good, reproducible analyses - and using github - and teaching others (especially at Sussex). This is my first experiment with github io pages, a demonstration of dplyr, ggplot, and a few related R packages (see below), and explanation of some of the R code.\r\n\r\nR packages used are: \r\n \r\ndplyr https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html\r\n\r\nggplot2 http://docs.ggplot2.org/current/\r\n\r\ntidyr https://cran.r-project.org/web/packages/tidyr/index.html\r\n\r\ngridExtra https://cran.r-project.org/web/packages/gridExtra/index.html\r\n\r\ncowplot https://cran.r-project.org/web/packages/cowplot/vignettes/introduction.html\r\n\r\n\r\nA routine import of data in text (tab-delimited) format:\r\n\r\n    morta = read.table(\"who_mortality_2015.txt\", header = T, sep = \"\\t\")\r\n\r\n\r\nConvert global DALY for each sex into millions and view:\r\n\r\n                              id myclass  myid     male   female         age years   milmale milfemale\r\n    1 Neonatal_sepsis_and_infections       B B-Inf 22129032 17494859   0-27 days  0.00 22.129032 17.494859\r\n    2 Neonatal_sepsis_and_infections       B B-Inf 22129032 17494859   0-27 days  0.07 22.129032 17.494859\r\n    3 Neonatal_sepsis_and_infections       B B-Inf     3332     3549 1-59 months  0.08  0.003332  0.003549\r\n    4 Neonatal_sepsis_and_infections       B B-Inf     3332     3549 1-59 months  4.90  0.003332  0.003549\r\n    5 Neonatal_sepsis_and_infections       B B-Inf      894    12022  5-14 years  5.00  0.000894  0.012022\r\n    6 Neonatal_sepsis_and_infections       B B-Inf      894    12022  5-14 years 14.00  0.000894  0.012022\r\n    \r\n  \r\nUse dplyr's select'n'gather functions to reformat the data as 'long':\r\n\r\n    b = morta %>%\r\n        select (myid, milmale, milfemale, years, age) %>%\r\n        gather (key = sex, value = daly, -c(myid, years, age))\r\n\r\n    > head(b)\r\n      myid years         age     sex      daly\r\n    1 B-Inf  0.00   0-27 days milmale 22.129032\r\n    2 B-Inf  0.07   0-27 days milmale 22.129032\r\n    3 B-Inf  0.08 1-59 months milmale  0.003332\r\n    4 B-Inf  4.90 1-59 months milmale  0.003332\r\n    5 B-Inf  5.00  5-14 years milmale  0.000894\r\n    6 B-Inf 14.00  5-14 years milmale  0.000894\r\n  \r\n\r\nThe factor level manipulations (not shown here) are not elegant, and could probably be improved somehow.\r\n\r\n  \r\nMake a decent custom plot theme (because native ggplot themes are not great):\r\n\r\n    theme_f1 <- function() {\r\n        theme_bw(base_size = 8) +\r\n          theme(\r\n            plot.margin = unit(c(.25, .5, .25, .25), \"cm\"),\r\n            strip.background = element_rect(fill = \"white\", colour=\"white\"),\r\n            axis.line.y = element_line(size = .3, colour = \"black\"),\r\n            axis.line.x = element_line(size = .3, colour = \"black\")\r\n          ) \r\n        }\r\n \r\n\r\nUse this command to check that the custom theme is complete (Should return 'true'):\r\n\r\n    attr(theme_f1(), \"complete\")\r\n  \r\n\r\n  \r\n  \r\n  \r\n  \r\nPlot all causes of DALY throughout age as area graphs; group (and colour) the areas by sex; achieved generally by ggplot2 facet_wrap. Having a full label on each plot for each cause ('id') isn't really practical. The custom identifiers ('myid') work, but adding the Guide as a title isn't great. Note, the y-axis range differs between plots, and can be changed with scales = \"fixed\" (facet_wrap).\r\n\r\n    all.pheno.time = \r\n        ggplot (b, aes(years, daly, group = sex, fill = sex)) +\r\n          geom_area(alpha = .5, position = \"identity\") +\r\n          facet_wrap(\"myid\", scales=\"free_y\") + \r\n            theme_f1() +\r\n            labs(title = \"Guide: B=Birth, C=Cardio, D=Digestive, G=Genetic, I=Infection, J=inJury, M=Metabolic,\r\n                 N=Neurological, O=Oncology, P=Psychiatric, S=Sensory, U=Uro-genital, Z=other\", size = 6) +\r\n            scale_y_continuous(name=\"Disability-adjusted life-years (millions)\", labels = NULL) +\r\n            scale_x_continuous(name = \"Age group (years)\") +\r\n              theme(legend.position=\"none\",\r\n                    panel.grid.major.x = element_line(size = 0),\r\n                    title = element_text(size = 5))\r\n  \r\n\r\n    \r\nPlot DALY for __selected__ phenotypes, age x sex x DALY. It is also possible to plot these as smoothed lines but I feel as though plain geom_line is truer to the data.\r\n\r\n    sel.pheno.plot =  \r\n        ggplot (c, aes(years, milcounts, group = sex, linetype = sex, colour = sex)) +\r\n          geom_line(size = 4, alpha = .3, linetype = 1) + \r\n          geom_line(size = .5, alpha = .8, colour = \"black\") + \r\n            facet_wrap(\"id\", scales=\"free_y\", labeller = mylabs) + \r\n            scale_colour_discrete(name = \"Legend\", labels=c(\"Female\", \"Male\")) +\r\n            scale_linetype_discrete(name = \"Legend\", labels = c(\"Female\", \"Male\")) +\r\n            theme_f2() +\r\n            scale_y_continuous(name = \"Disability-adjusted life years (millions)\") +\r\n            scale_x_continuous(name = \"Age group (years)\") +\r\n            guides (colour = guide_legend(title = \"Legend\")) +\r\n              theme(legend.position = \"bottom\")\r\n\r\n  \r\n  \r\n  \r\nScatter plots of male vs female DALY, grouped by age. Warning, points are paired/duplicated due to age/years.\r\n\r\n    scat.all.ages = \r\n        ggplot(morta, aes(milmale, milfemale)) + \r\n          geom_abline(intercept = 0, slope = 1, size=.5, linetype = 2, colour=\"black\") +\r\n          geom_point(size=2, shape=21) +\r\n          geom_smooth(se=TRUE, size = 0) +\r\n            scale_x_continuous(name = \"male DALY (x10^6)\") +\r\n            scale_y_continuous(name = \"female DALY (x10^6)\") +\r\n            facet_wrap(\"age\", nrow = 2) +\r\n            theme_f1() +\r\n              theme(legend.position=\"none\")\r\n    \r\n  \r\n  \r\nScatter plot of male vs female DALY for age to 15-29 only, points labelled with type.\r\n  \r\n    scat.mid =\r\n        ggplot(filter(morta, years == 29.00), aes(milmale, milfemale, label = id)) + \r\n        geom_abline(intercept = 0, slope = 1, size=.5, linetype = 2, colour = \"black\") +\r\n        geom_text(size = 2) +\r\n        geom_smooth(se = TRUE, size = 0) +\r\n          scale_x_continuous(name = \"male DALY (x10^6)\") +\r\n          scale_y_continuous(name = \"female DALY (x10^6)\") +\r\n          facet_wrap(\"age\", nrow = 2) +\r\n          theme_f1() +\r\n            theme(legend.position = \"none\")\r\n    \r\n  \r\n  \r\nCombine four plots into one page. This requires the package 'gridExtra'.\r\n  \r\n    all.plots = plot_grid(nrow = 2, \r\n                        all.pheno.time, sel.pheno.plot, \r\n                        scat.all.ages, scat.mid, \r\n                        labels = \"AUTO\",  label_size = 12, scale = 1)\r\n  \r\n\r\n  \r\nSave combined plots, using package cowplot.\r\n  \r\n    save_plot(\"suppfig1_all_sexMortality.pdf\", all.plots, base_height = 10)\r\n    save_plot(\"fig1_sexMortality.pdf\", sel.pheno.plot, base_height = 5)\r\n\r\n\r\n\r\nNow, how do I display images here ??? Here are the links anyway:\r\n\r\nhttps://github.com/willgilks/WHO_DALY_2012/blob/master/fig1_sexMortality.png\r\nhttps://github.com/willgilks/WHO_DALY_2012/blob/master/suppfig1_all_sexMortality.png\r\n\r\nThere ends my first github io page.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}